# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: otakuma
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: gql-nextjs
# "service" is the name of this project. This will also be added to your AWS resource names.
service: gql-nextjs
useDotenv: true
plugins:
  # - serverless-esbuild
  - serverless-offline
package:
  individually: true
provider:
  name: aws
  runtime: nodejs22.x
  region: ap-southeast-2
  environment:
    LOCALITIES_API_URL: ${env:LOCALITIES_API_URL}
    LOCALITIES_API_KEY: ${env:LOCALITIES_API_KEY}
    LOCALITIES_API_STAGE: ${env:LOCALITIES_API_STAGE}
    AUTH_ISSUER: ${env:AUTH_ISSUER}
    AUTH_AUDIENCE: ${env:AUTH_AUDIENCE}
    AUTH_JWT_SECRET: ${env:AUTH_JWT_SECRET}
functions:
  gql-nextjs-lambda:
    handler: lambda.handler
    package:
      artifact: ./dist/lambda.zip
    events:
      - httpApi:
          path: /
          method: POST
      - httpApi:
          path: /
          method: GET
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node20
    define:
      require.resolve: undefined
    platform: node
    concurrency: 10
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
